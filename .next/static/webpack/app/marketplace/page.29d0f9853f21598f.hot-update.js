"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/marketplace/page",{

/***/ "(app-pages-browser)/./src/hooks/useWalletConnection.ts":
/*!******************************************!*\
  !*** ./src/hooks/useWalletConnection.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWalletConnection: function() { return /* binding */ useWalletConnection; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/providers/provider-browser.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/utils/units.js\");\n\n\nfunction useWalletConnection() {\n    const [address, setAddress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [accountData, setAccountData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n    const checkWalletConnection = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (typeof window.ethereum !== \"undefined\") {\n            try {\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.BrowserProvider(window.ethereum);\n                const accounts = await provider.listAccounts();\n                if (accounts.length > 0) {\n                    const currentAddress = await accounts[0].getAddress();\n                    const response = await fetch(\"/api/wallet?address=\".concat(currentAddress));\n                    const data = await response.json();\n                    if (data.connected === \"true\") {\n                        setAddress(currentAddress);\n                        setAccountData(data);\n                    }\n                }\n            } catch (error) {\n                console.error(\"Failed to check wallet connection:\", error);\n            }\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        checkWalletConnection();\n        if (window.ethereum) {\n            window.ethereum.on(\"accountsChanged\", (accounts)=>{\n                handleAccountsChanged(accounts);\n            });\n        }\n        return ()=>{\n            if (window.ethereum) {\n                window.ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n            }\n        };\n    }, [\n        checkWalletConnection\n    ]);\n    const handleAccountsChanged = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (accounts)=>{\n        if (accounts.length > 0) {\n            const newAddress = accounts[0];\n            setAddress(newAddress);\n            await updateWalletData(newAddress);\n        } else {\n            await disconnectWallet();\n        }\n    }, []);\n    const updateWalletData = async (newAddress)=>{\n        if (typeof window.ethereum !== \"undefined\") {\n            try {\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.BrowserProvider(window.ethereum);\n                const balance = await provider.getBalance(newAddress);\n                const network = await provider.getNetwork();\n                const newAccountData = {\n                    address: newAddress,\n                    balance: ethers__WEBPACK_IMPORTED_MODULE_2__.formatEther(balance),\n                    chainId: network.chainId.toString(),\n                    network: network.name\n                };\n                await fetch(\"/api/wallet\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(newAccountData)\n                });\n                setAccountData(newAccountData);\n            } catch (error) {\n                console.error(\"Failed to update wallet data:\", error);\n            }\n        }\n    };\n    const connectWallet = async ()=>{\n        if (typeof window.ethereum !== \"undefined\") {\n            try {\n                // This will trigger the MetaMask modal\n                const accounts = await window.ethereum.request({\n                    method: \"eth_requestAccounts\"\n                });\n                const newAddress = await accounts[0];\n                setAddress(newAddress);\n                await updateWalletData(newAddress);\n            } catch (error) {\n                console.error(\"Failed to connect wallet:\", error);\n            }\n        } else {\n            console.error(\"Ethereum object not found, do you have MetaMask installed?\");\n        }\n    };\n    const disconnectWallet = async ()=>{\n        if (address) {\n            await fetch(\"/api/wallet\", {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    address\n                })\n            });\n        }\n        setAddress(null);\n        setAccountData({});\n    };\n    const changeAccount = async ()=>{\n        // This will trigger the MetaMask modal for account selection\n        await connectWallet();\n    };\n    return {\n        address,\n        accountData,\n        connectWallet,\n        disconnectWallet,\n        changeAccount\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useWalletConnection.ts\n"));

/***/ })

});